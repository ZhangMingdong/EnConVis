#pragma once
#include "BasicStruct.h"

/*
	used to generate contours
	interface
	Mingdong
	2020/01/26
*/
class Q_DECL_EXPORT ContourGenerator
{
private:
	static ContourGenerator* s_pInstance;
public:
	static ContourGenerator* GetInstance();
	static void Release();
public:
	/*
		generate the contour
		data:			the scalar field
		listContour:	store the result
		fValue:			iso-value
		nWidth,nHeight:	width and height of the field
		x,y,w,h:		focused area
	*/
	virtual void Generate(const double* data
		, QList<ContourLine>& listContour
		, double fValue
		, int nWidth
		, int nHeight
	);
protected:	
	double _fValue;					// the iso-value	
	const double* _data;			// the grid data	
	int _nWidth;					// width	
	int _nHeight;					// height
private:
	// the segments generated by marching square
	QList<LineSeg> _listSeg;
private:
	// generate the line strips by marching square
	void generateLineStrip();
	// combine the line strips
	void combineLineStrip(QList<ContourLine>& listContour);

	// get the intersection point
	QPointF getIntersectionPt(int arrIndex[4]);

};

